version: v2beta1
name: demo-graphql

# This is a list of `pipelines` that DevSpace can execute (you can define your own)
pipelines:
  # This is the pipeline for the main command: `devspace dev` (or `devspace run-pipeline dev`)
  dev:
    run: |-
      run_dependencies --all       # 1. Deploy any projects this project needs (see "dependencies")
      ensure_pull_secrets --all    # 2. Ensure pull secrets
      create_deployments --all     # 3. Deploy Helm charts and manifests specfied as "deployments"
      start_dev --all              # 4. Start dev mode "app" (see "dev" section)
  # You can run this pipeline via `devspace deploy` (or `devspace run-pipeline deploy`)
  deploy:
    run: |-
      run_dependencies --all                            # 1. Deploy any projects this project needs (see "dependencies")
      ensure_pull_secrets --all                         # 2. Ensure pull secrets
      build_images --all -t $(git describe --always)    # 3. Build, tag (git commit hash) and push all images (see "images")
      create_deployments --all                          # 4. Deploy Helm charts and manifests specfied as "deployments"

# This is a list of `deployments` that DevSpace can create for this project
deployments:
  node:
    # This deployment uses `helm` but you can also define `kubectl` deployments or kustomizations
    helm:
      # We are deploying this project with the Helm chart you provided
      chart:
        name: component-chart
        repo: https://charts.devspace.sh
      # Under `values` we can define the values for this Helm chart used during `helm install/upgrade`
      # You may also use `valuesFiles` to load values from files, e.g. valuesFiles: ["values.yaml"]
      values:
        containers:
          - image: node:18-bullseye
  cerbos:
    helm:
      chart:
        name: cerbos
        git: git@github.com:cerbos/cerbos.git
        subPath: deploy/charts/cerbos
        branch: main
      values:
        image:
          tag: 0.28.0
      valuesFiles:
        - devspace/cerbos-values.yaml

# This is a list of `dev` containers that are based on the containers created by your deployments
dev:
  node:
    # Search for the container that runs this image
    imageSelector: node:18-bullseye
    # Replace the container image with this dev-optimized image (allows to skip image building during development)
    #devImage: ghcr.io/loft-sh/devspace-containers/typescript:18-alpine
    ports:
      - port: 8000:8000
    # Sync files between the local filesystem and the development container
    workingDir: /app/src
    sync:
      - path: ./:/app
        uploadExcludePaths:
          - node_modules
          - cerbos
    # Open a terminal and use the following command to start it
    terminal:
      command: /app/devspace/devspace_start.sh
